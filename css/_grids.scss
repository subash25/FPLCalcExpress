/* Grid */

@mixin wrapper {
    width: 100%;
    max-width: $wrapper-width;
    margin: 0 auto;
    padding: 0 1rem;
    @include clearfix;
    position: relative;
    z-index: $level-1;
}

.wrapper {
    @include wrapper;

    &--wide {
        max-width: 200rem;
    }

    &--small {
        max-width: 98rem;
    }

    &--search {
        max-width: 110rem;
    }
}

/* Columns */

[class*="col-"] {
    width: 100%;
    padding-left: $layout-padding;
    padding-right: $layout-padding;
    float: left;
}

.primary-col {
    padding-right: $layout-padding*5;
    @media(max-width: $break-tablet) {
        padding-right: $layout-padding;
    }
}

.stats-content{
    padding: $layout-padding*4;
}

.stats-menu {
    @media(max-width: $break-tablet) {
        margin-top: $layout-padding*2;
    }
}

/*loop through $mq-breakpoints in _mq.scss and create collapse classes
to remove padding from grid item at a certain breakpoint */
@each $item, $col-break in $mq-breakpoints {
    @media(max-width: #{$col-break}) {
        .col-#{$item}-collapse {
            padding: 0 !important;
        }
    }
}
@each $item, $col-break in $mq-breakpoints {
    @media(min-width: #{$col-break}) {
        .col-#{$item}-upwards-collapse {
            padding: 0 !important;
        }
    }
}
// Universal collapse class to apply to all sizes
.col-collapse {
    padding: 0!important !important;
}

$i: 1;

@while $i < 13 {
    .col-#{$i} {
        width: (100% / 12) * $i;
    }
    $i: $i + 1;
}

@include mq($until: wide) {

    $i: 1;

    @while $i < 13 {
        .col-#{$i}-wide {
            width: (100% / 12) * $i;
        }
        $i: $i + 1;
    }
}

@include mq($until: desktop) {

    $i: 1;

    @while $i < 13 {
        .col-#{$i}-desk {
            width: (100% / 12) * $i;
        }
        $i: $i + 1;
    }
}

@include mq($until: tablet) {

    $i: 1;

    @while $i < 13 {
        .col-#{$i}-tab {
            width: (100% / 12) * $i;
        }
        $i: $i + 1;
    }
}

@include mq($until: phablet) {

    $i: 1;

    @while $i < 13 {
        .col-#{$i}-phab {
            padding-left: $layout-padding / 2;
            padding-right: $layout-padding / 2;
            width: (100% / 12) * $i;
        }
        $i: $i + 1;
    }
}

@include mq($until: mobile) {

    $i: 1;

    @while $i < 13 {
        .col-#{$i}-mob {
            width: (100% / 12) * $i;
        }
        $i: $i + 1;
    }
}

/* Block Grids */

[class*="block-list"] {
    clear: both;
    font-size: 0;

    > li {
        display: inline-block;
        vertical-align: top;
        clear: both;
        margin-bottom: $layout-padding * 2;
        padding-left: $layout-padding;
        padding-right: $layout-padding;
        width: 100%;
    }
}

[class*="block-list"].small-gutters {
    > li {
        padding-left: $layout-padding/2;
        padding-right: $layout-padding/2;
    }
}

[class*="block-list"].large-gutters {
    > li {
        padding-left: $layout-padding*2;
        padding-right: $layout-padding*2;
    }
}

.flex-grid {
    align-items: stretch;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex !important;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    height: 100%;
    width: 100%;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-direction: row;
    flex-direction: row;
    display: -webkit-flex;
    -webkit-flex-wrap: wrap;
    -webkit-flex-direction: row;
}

.center-flex-grid {
    align-items: center;
    display: flex !important;
    flex-wrap: wrap;
}

@mixin scroll-grid( $breakpoint: $break-phablet ) {
    @media( max-width: $breakpoint ) {
        overflow: auto;
        white-space: nowrap;

        > li {
            width: 80% !important;
            @if $breakpoint = $break-tablet {
                width: 40% !important;
            }
            display: inline-block !important;
            margin-right: 1rem;
            padding-left: 0 !important;
            padding-right: 0 !important;
            float: none !important;
            clear: none!important;
        }
    }
    @media( max-width: $break-phablet ) {
        > li {
            width: 75% !important;
        }
    }
}

.scroll-grid {
    @include scroll-grid;
}

.scroll-grid-tablet {
    @include scroll-grid( $break-tablet );
}

@include mq($from: mobile) {
    $i: 1;

    @while $i <= 6 {
        .block-list-#{$i} > li {
            width: ( 100 / $i ) * 1%;
        }
        $i: $i + 1;
    }
}

@include mq($until: wide) {
    $i: 1;

    @while $i <= 6 {
        .block-list-#{$i}-wide > li {
            width: ( 100 / $i ) * 1%;
        }
        $i: $i + 1;
    }
}

@include mq($until: desktop) {
    $i: 1;

    @while $i <= 4 {
        .block-list-#{$i}-desk > li {
            width: (100 / $i) * 1%;
        }
        $i: $i + 1;
    }
}

@include mq($until: 1220px) {
    $i: 1;

    @while $i <= 4 {
        .block-list-#{$i}-narrow > li {
            width: (100 / $i) * 1%;
        }
        $i: $i + 1;
    }
}

@include mq($until: tablet) {
    $i: 1;

    @while $i <= 4 {
        .block-list-#{$i}-tab > li {
            width: (100 / $i) * 1%;
        }
        $i: $i + 1;
    }
}

@include mq($until: phablet) {
    $i: 1;

    @while $i <= 4 {
        .block-list-#{$i}-phab > li {
            width: (100 / $i) * 1%;
        }
        $i: $i + 1;
    }
}

@include mq($until: mobile) {
    $i: 1;

    @while $i <= 4 {
        .block-list-#{$i}-mob > li {
            width: (100 / $i) * 1%;
        }
        $i: $i + 1;
    }
}

[class*="block-grid-"] {
    display: block;
    padding: 0;
    @include clearfix;
}

[class*="block-grid-"] > li {
    float: left;
    padding: 0 $layout-padding ($layout-padding*2);
}

@media only screen {
    .small-block-grid-1 > li {
        width: 100%;
        list-style: none;
    }

    .small-block-grid-1 > li:nth-of-type(1n) {
        clear: none;
    }

    .small-block-grid-1 > li:nth-of-type(1n+1) {
        clear: both;
    }

    .small-block-grid-2 > li {
        width: 50%;
        list-style: none;
    }

    .small-block-grid-2 > li:nth-of-type(1n) {
        clear: none;
    }

    .small-block-grid-2 > li:nth-of-type(2n+1) {
        clear: both;
    }

    .small-block-grid-3 > li {
        width: 33.33333%;
        list-style: none;
    }

    .small-block-grid-3 > li:nth-of-type(1n) {
        clear: none;
    }

    .small-block-grid-3 > li:nth-of-type(3n+1) {
        clear: both;
    }

    .small-block-grid-4 > li {
        width: 25%;
        list-style: none;
    }

    .small-block-grid-4 > li:nth-of-type(1n) {
        clear: none;
    }

    .small-block-grid-4 > li:nth-of-type(4n+1) {
        clear: both;
    }

    .small-block-grid-5 > li {
        width: 20%;
        list-style: none;
    }

    .small-block-grid-5 > li:nth-of-type(1n) {
        clear: none;
    }

    .small-block-grid-5 > li:nth-of-type(5n+1) {
        clear: both;
    }

    .small-block-grid-6 > li {
        width: 16.66667%;
        list-style: none;
    }

    .small-block-grid-6 > li:nth-of-type(1n) {
        clear: none;
    }

    .small-block-grid-6 > li:nth-of-type(6n+1) {
        clear: both;
    }

    .small-block-grid-7 > li {
        width: 14.28571%;
        list-style: none;
    }

    .small-block-grid-7 > li:nth-of-type(1n) {
        clear: none;
    }

    .small-block-grid-7 > li:nth-of-type(7n+1) {
        clear: both;
    }

    .small-block-grid-8 > li {
        width: 12.5%;
        list-style: none;
    }

    .small-block-grid-8 > li:nth-of-type(1n) {
        clear: none;
    }

    .small-block-grid-8 > li:nth-of-type(8n+1) {
        clear: both;
    }

    .small-block-grid-9 > li {
        width: 11.11111%;
        list-style: none;
    }

    .small-block-grid-9 > li:nth-of-type(1n) {
        clear: none;
    }

    .small-block-grid-9 > li:nth-of-type(9n+1) {
        clear: both;
    }

    .small-block-grid-10 > li {
        width: 10%;
        list-style: none;
    }

    .small-block-grid-10 > li:nth-of-type(1n) {
        clear: none;
    }

    .small-block-grid-10 > li:nth-of-type(10n+1) {
        clear: both;
    }

    .small-block-grid-11 > li {
        width: 9.09091%;
        list-style: none;
    }

    .small-block-grid-11 > li:nth-of-type(1n) {
        clear: none;
    }

    .small-block-grid-11 > li:nth-of-type(11n+1) {
        clear: both;
    }

    .small-block-grid-12 > li {
        width: 8.33333%;
        list-style: none;
    }

    .small-block-grid-12 > li:nth-of-type(1n) {
        clear: none;
    }

    .small-block-grid-12 > li:nth-of-type(12n+1) {
        clear: both;
    }
}
@media only screen and (min-width: $break-phablet) {
    .medium-block-grid-1 > li {
        width: 100%;
        list-style: none;
    }

    .medium-block-grid-1 > li:nth-of-type(1n) {
        clear: none;
    }

    .medium-block-grid-1 > li:nth-of-type(1n+1) {
        clear: both;
    }

    .medium-block-grid-2 > li {
        width: 50%;
        list-style: none;
    }

    .medium-block-grid-2 > li:nth-of-type(1n) {
        clear: none;
    }

    .medium-block-grid-2 > li:nth-of-type(2n+1) {
        clear: both;
    }

    .medium-block-grid-3 > li {
        width: 33.33333%;
        list-style: none;
    }

    .medium-block-grid-3 > li:nth-of-type(1n) {
        clear: none;
    }

    .medium-block-grid-3 > li:nth-of-type(3n+1) {
        clear: both;
    }

    .medium-block-grid-4 > li {
        width: 25%;
        list-style: none;
    }

    .medium-block-grid-4 > li:nth-of-type(1n) {
        clear: none;
    }

    .medium-block-grid-4 > li:nth-of-type(4n+1) {
        clear: both;
    }

    .medium-block-grid-5 > li {
        width: 20%;
        list-style: none;
    }

    .medium-block-grid-5 > li:nth-of-type(1n) {
        clear: none;
    }

    .medium-block-grid-5 > li:nth-of-type(5n+1) {
        clear: both;
    }

    .medium-block-grid-6 > li {
        width: 16.66667%;
        list-style: none;
    }

    .medium-block-grid-6 > li:nth-of-type(1n) {
        clear: none;
    }

    .medium-block-grid-6 > li:nth-of-type(6n+1) {
        clear: both;
    }

    .medium-block-grid-7 > li {
        width: 14.28571%;
        list-style: none;
    }

    .medium-block-grid-7 > li:nth-of-type(1n) {
        clear: none;
    }

    .medium-block-grid-7 > li:nth-of-type(7n+1) {
        clear: both;
    }

    .medium-block-grid-8 > li {
        width: 12.5%;
        list-style: none;
    }

    .medium-block-grid-8 > li:nth-of-type(1n) {
        clear: none;
    }

    .medium-block-grid-8 > li:nth-of-type(8n+1) {
        clear: both;
    }

    .medium-block-grid-9 > li {
        width: 11.11111%;
        list-style: none;
    }

    .medium-block-grid-9 > li:nth-of-type(1n) {
        clear: none;
    }

    .medium-block-grid-9 > li:nth-of-type(9n+1) {
        clear: both;
    }

    .medium-block-grid-10 > li {
        width: 10%;
        list-style: none;
    }

    .medium-block-grid-10 > li:nth-of-type(1n) {
        clear: none;
    }

    .medium-block-grid-10 > li:nth-of-type(10n+1) {
        clear: both;
    }

    .medium-block-grid-11 > li {
        width: 9.09091%;
        list-style: none;
    }

    .medium-block-grid-11 > li:nth-of-type(1n) {
        clear: none;
    }

    .medium-block-grid-11 > li:nth-of-type(11n+1) {
        clear: both;
    }

    .medium-block-grid-12 > li {
        width: 8.33333%;
        list-style: none;
    }

    .medium-block-grid-12 > li:nth-of-type(1n) {
        clear: none;
    }

    .medium-block-grid-12 > li:nth-of-type(12n+1) {
        clear: both;
    }
}
@media only screen and (min-width: $break-tablet) {
    .large-block-grid-1 > li {
        width: 100%;
        list-style: none;
    }

    .large-block-grid-1 > li:nth-of-type(1n) {
        clear: none;
    }

    .large-block-grid-1 > li:nth-of-type(1n+1) {
        clear: both;
    }

    .large-block-grid-2 > li {
        width: 50%;
        list-style: none;
    }

    .large-block-grid-2 > li:nth-of-type(1n) {
        clear: none;
    }

    .large-block-grid-2 > li:nth-of-type(2n+1) {
        clear: both;
    }

    .large-block-grid-3 > li {
        width: 33.33333%;
        list-style: none;
    }

    .large-block-grid-3 > li:nth-of-type(1n) {
        clear: none;
    }

    .large-block-grid-3 > li:nth-of-type(3n+1) {
        clear: both;
    }

    .large-block-grid-4 > li {
        width: 25%;
        list-style: none;
    }

    .large-block-grid-4 > li:nth-of-type(1n) {
        clear: none;
    }

    .large-block-grid-4 > li:nth-of-type(4n+1) {
        clear: both;
    }

    .large-block-grid-5 > li {
        width: 20%;
        list-style: none;
    }

    .large-block-grid-5 > li:nth-of-type(1n) {
        clear: none;
    }

    .large-block-grid-5 > li:nth-of-type(5n+1) {
        clear: both;
    }

    .large-block-grid-6 > li {
        width: 16.66667%;
        list-style: none;
    }

    .large-block-grid-6 > li:nth-of-type(1n) {
        clear: none;
    }

    .large-block-grid-6 > li:nth-of-type(6n+1) {
        clear: both;
    }

    .large-block-grid-7 > li {
        width: 14.28571%;
        list-style: none;
    }

    .large-block-grid-7 > li:nth-of-type(1n) {
        clear: none;
    }

    .large-block-grid-7 > li:nth-of-type(7n+1) {
        clear: both;
    }

    .large-block-grid-8 > li {
        width: 12.5%;
        list-style: none;
    }

    .large-block-grid-8 > li:nth-of-type(1n) {
        clear: none;
    }

    .large-block-grid-8 > li:nth-of-type(8n+1) {
        clear: both;
    }

    .large-block-grid-9 > li {
        width: 11.11111%;
        list-style: none;
    }

    .large-block-grid-9 > li:nth-of-type(1n) {
        clear: none;
    }

    .large-block-grid-9 > li:nth-of-type(9n+1) {
        clear: both;
    }

    .large-block-grid-10 > li {
        width: 10%;
        list-style: none;
    }

    .large-block-grid-10 > li:nth-of-type(1n) {
        clear: none;
    }

    .large-block-grid-10 > li:nth-of-type(10n+1) {
        clear: both;
    }

    .large-block-grid-11 > li {
        width: 9.09091%;
        list-style: none;
    }

    .large-block-grid-11 > li:nth-of-type(1n) {
        clear: none;
    }

    .large-block-grid-11 > li:nth-of-type(11n+1) {
        clear: both;
    }

    .large-block-grid-12 > li {
        width: 8.33333%;
        list-style: none;
    }

    .large-block-grid-12 > li:nth-of-type(1n) {
        clear: none;
    }

    .large-block-grid-12 > li:nth-of-type(12n+1) {
        clear: both;
    }
}

//padding so section displays narrower
.block-indent {
    padding: 0 8rem;
}

//collapse borders in block grid
.block-grid--small-gutter {
    margin: 0 ((-$layout-padding)/2);

    > li {
        padding: 0 ($layout-padding/2) $layout-padding;
    }
}

.inline-list{
    >li{
        display: inline-block;
        margin-right: 1rem;
        &:last-child{
            margin-right: 0;
        }
    }
}

.content-grid > li {
    padding-top: $layout-padding;
    padding-bottom: $layout-padding;
}
